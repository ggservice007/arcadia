query allDataProcessListByPage($input: AllDataProcessListByPageInput!){
  dataProcess {
    allDataProcessListByPage(input: $input) {
      status
      data {
        id
        name
        status
        pre_data_set_name
        pre_data_set_version
        post_data_set_name
        post_data_set_version
        start_datetime
        error_msg
      }
      message
    }
  }
}

query allDataProcessListByCount($input: AllDataProcessListByCountInput!){
  dataProcess {
    allDataProcessListByCount(input: $input) {
      status
      data
      message
    }
  }
}

query dataProcessSupportType{
  dataProcess {
    dataProcessSupportType {
      status
      data {
        name
        description
        children {
          name
          zh_name
          description
          enable
        }
      }
      message
    }
  }
}

query dataProcessDetails($input: DataProcessDetailsInput){
  dataProcess {
    dataProcessDetails(input: $input) {
      status
      data {
        id
        status
        name
        file_type
        pre_dataset_name
        pre_dataset_version
        post_dataset_name
        post_dataset_version
        file_num
        start_time
        end_time
        creator
        error_msg
        config {
          name
          description
          file_num
          status
          children {
            name
            enable
            zh_name
            description
            llm_config {
              name
              namespace
              model
              temperature
              top_p
              max_tokens
              prompt_template
              provider
            }
            preview {
              file_name
              content {
                pre
                post
              }
            }
            file_progress {
              id,
              file_name,
              status,
              start_time,
              end_time,
              progress
            }
          }
        }
      }
      message
    }
  }
}

query checkDataProcessTaskName($input: CheckDataProcessTaskNameInput){
  dataProcess {
    checkDataProcessTaskName(input: $input) {
      status
      data 
      message
    }
  }
}

mutation createDataProcessTask($input: AddDataProcessInput) {
  dataProcess {
    createDataProcessTask(input: $input) {
      status
      data
      message
    }
  }
}

mutation deleteDataProcessTask($input: DeleteDataProcessInput) {
  dataProcess {
    deleteDataProcessTask(input: $input) {
      status
      data
      message
    }
  }
}
